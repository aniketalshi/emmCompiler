
=================Lexical and Syntax Parsing==================

=========================AST Builder=========================
 
  int logMessage(string x);
  int a = 5;
  int b;
  int c;
  bool condition;
  int open(string file, int flags, unsigned int mode) {
    
    while (a<3)     {
      a=10;
      if (a==10)       {
        continue 1;
      };
      logMessage("Assignment in condition");
      break 1;
      while (a>10)       {
        a=(b+c);
        if (a>20)         {
          continue 2;
        };
        else         {
          break 2;
        };
      };
    };
  };
 

========================Type Checking========================

======================Memory Allocation======================


====Global Declarations

====Function 'logMessage'
==Formal Parameters
Variable: x, Offset: 8

Variable: a, Offset: 0
Variable: b, Offset: 4
Variable: c, Offset: 8
Variable: condition, Offset: 12

====Function 'open'
==Formal Parameters
Variable: file, Offset: 8
Variable: flags, Offset: 12
Variable: mode, Offset: 16
==Local Variables

======================3 Addr Generation======================
GLOBAL:
        a = 5
open:
        enter open
L2:
        if a < 3 goto L3:
        goto L4:
L3:
        a = 10
        if a == 10 goto L6:
        goto L5:
L6:
        goto L2:
L5:
        param "Assignment in condition"
        call logMessage
        goto L4:
L7:
        if a > 10 goto L8:
        goto L9:
L8:
        __vreg0 = b + c
        a = __vreg0
        if a > 20 goto L11:
        goto L12:
L11:
        goto L2:
        goto L10:
L12:
        goto L4:
L10:
        goto L7:
L9:
        goto L2:
L4:
        leave open
Compilation Successful
