
=================Lexical and Syntax Parsing==================

=========================AST Builder=========================
 
  int a = 5;
  int f(int i, int j) {
    int c = 2;
    int b = ((2+3)+c);
    double e = (8.5+1.1);
  
    if ((e<b&&e>c))     b=(9/2);
    else     b=9*2;
    e=(c+b);
    return c;
  };
  int b = 10;
 

========================Type Checking========================

======================Memory Allocation======================


====Global Declarations
Variable: a, Offset: 0

====Function 'f'
==Formal Parameters
Variable: i, Offset: 8
Variable: j, Offset: 12
==Local Variables
Variable: c, Offset: -4
Variable: b, Offset: -8
Variable: e, Offset: -12

Variable: b, Offset: 4
======================3 Addr Generation======================
GLOBAL:
        a = 5
f:
        enter f
        fparam i
        fparam j
        c = 2
        __vreg0 = 2 + 3
        __vreg1 = __vreg0 + c
        b = __vreg1
        __vreg2 = 8.5 + 1.1
        e = __vreg2
        if e < b goto L5:
        goto L4:
L5:
        if e > c goto L3:
        goto L4:
L3:
        __vreg3 = 9 / 2
        b = __vreg3
        goto L2:
L4:
        __vreg4 = 9 * 2
        b = __vreg4
L2:
        __vreg5 = c + b
        e = __vreg5
        return c
        leave f
        b = 10

====================Basic Block creation=====================
Compilation Successful
