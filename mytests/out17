
=================Lexical and Syntax Parsing==================

=========================AST Builder=========================
 
  class CString;
  string get(class CString s);
  class Integer;
  class ArgV;
  class StatP;
  class NewStatP;
  int logmessage(string x);
  int logmessageint(string x, int y);
  bool isfile(string x, string y);
  event open(int a1, int a2, unsigned int a3);
  event close(int a1);
  event execve(int a1, int a2, int a3);
  event lstat(int a1, int a2);
  event stat(int a1, int a2);
  int i = 0;
  int j = 1;
  string rv;
  string t2;
 
  ((open(int a1, int a2, unsigned int a3)|(get(a1)=="abc"&&rv=get(a2))):(((lstat(int s1, int s2)):(close(int c1)|get(c1)==rv))**))-->   {
    logmessageint("proc_ops open.lstat.close", rv);
  };
  ;;
  (((open(int o1, int o2, unsigned int o3)|(!isfile(get(o1), "bd")&&t2=o3)):((stat(int s3, int s4))**)):(execve(int b1, int b2, int b3)))-->   {
    logmessage("proc_ops open.stat.execve");
  };
  ;;
  (((((any)**):(close(int c1)|(get(c1)==1&&rv=get(c1)))):((stat(int s3, int s4))**)):(execve(int b1, int b2, int b3)))-->   {
    logmessage("proc_ops any.close.stat.execve");
  };
  ;;
  ((((any)**):(open(int o1, int o2, unsigned int o3)|get(o1)=="abc")):(close(int c1)))-->   {
    logmessage("rule1:");
  };
  ;;
  ((((any)**):(open(int a1, int a2, unsigned int a3)|get(a1)=="xyz")):(close(int d1)))-->   {
    logmessage("rule2:");
  };
  ;;

========================Type Checking========================
mytests/in17:26:Error: Type Mismatch for argument 1 to get
mytests/in17:26:Error: Type Mismatch for argument 1 to get
mytests/in17:26:Warning: Incompatible type for agrument 2 for operator `&&'
mytests/in17:27:Error: Type Mismatch for argument 1 to get
mytests/in17:28:Error: Type Mismatch for argument 2 to logmessageint
mytests/in17:32:Error: Type Mismatch for argument 1 to get
mytests/in17:32:Error: Assigned expression must be a subtype of target
mytests/in17:32:Warning: Incompatible type for agrument 2 for operator `&&'
mytests/in17:37:Error: Type Mismatch for argument 1 to get
mytests/in17:37:Error: Type Mismatch for argument 1 to get
mytests/in17:37:Warning: Incompatible type for agrument 2 for operator `&&'
mytests/in17:42:Error: Type Mismatch for argument 1 to get
mytests/in17:46:Error: Type Mismatch for argument 1 to get
mytests/in17:49:Error: 10 error(s) reported.
Compilation terminated.
