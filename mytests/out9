
=================Lexical and Syntax Parsing==================

=========================AST Builder=========================
 
  event open(string a1, int a2, unsigned int a3);
  byte b3;
  int s;
  int l;
  int i = 65536;
  int j = -65536;
  unsigned int us1 = 4;
  unsigned int ui = -20;
  unsigned int ul = 80;
  int ci = 2;
  double d = 34.456;
  void logMessage();
  bool b5 = true;
  string str = "sss";
  string str1;
  int get(int a);
 
  (open(string file, int flags, unsigned int mode))-->   {
    i=(s+l);
    i=(s+l);
    l=s=l;
    l=i;
    i=get(ci);
    ci=8;
    d=(i+j);
    d=(s-l);
    d=(l/s);
    d=l*s;
    i=(l%s);
    ui=us1;
    ul=us1;
    s=us1;
    l=ul;
    i=ui;
    str1=str;
    logMessage("open: testing types");
  };
  ;;

========================Type Checking========================
mytests/in9:51:Error: 0 arguments expected for logMessage

======================Memory Allocation======================


====Global Declarations

====Event open
Variable: a1, Offset: 4
Variable: a2, Offset: 8
Variable: a3, Offset: 12
Variable: b3, Offset: 4
Variable: s, Offset: 8
Variable: l, Offset: 12
Variable: i, Offset: 16
Variable: j, Offset: 20
Variable: us1, Offset: 24
Variable: ui, Offset: 28
Variable: ul, Offset: 32
Variable: ci, Offset: 36
Variable: d, Offset: 40

====Function logMessage
Variable: b5, Offset: 44
Variable: str, Offset: 48
Variable: str1, Offset: 52

====Function get
Variable: a, Offset: 8
